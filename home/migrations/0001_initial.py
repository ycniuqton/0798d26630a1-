# Generated by Django 4.2.9 on 2024-09-25 17:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import home.models
import utils.random_thing


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('country_region', models.CharField(blank=True, max_length=200, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=200, null=True)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=200, null=True)),
                ('subscribe_email', models.BooleanField(default=True)),
                ('vps_len', models.PositiveIntegerField(default=0)),
                ('balance_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_topup', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('open_ticket', models.PositiveIntegerField(default=0)),
                ('customer_code', models.CharField(blank=True, default=utils.random_thing.generate_customer_code, max_length=200, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AppSetting',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('invoice_due_days', models.IntegerField(default=3)),
                ('sufficient_balance_suspend_days', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'app_setting',
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('amount', models.FloatField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='balance', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'balance',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('amount', models.FloatField()),
                ('status', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('due_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('cycle', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'invoice',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('subject', models.CharField(max_length=200)),
                ('ticket_type', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('submission_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(max_length=200)),
                ('operation', models.CharField(max_length=200)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ticket',
            },
        ),
        migrations.CreateModel(
            name='Vps',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('cpu', models.IntegerField(blank=True, null=True)),
                ('ram', models.IntegerField(blank=True, null=True)),
                ('disk', models.IntegerField(blank=True, null=True)),
                ('network_speed', models.IntegerField(blank=True, null=True)),
                ('bandwidth', models.IntegerField(blank=True, null=True)),
                ('hostname', models.CharField(blank=True, max_length=200, null=True)),
                ('password', models.CharField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('virt', models.CharField(blank=True, max_length=20, null=True)),
                ('linked_id', models.IntegerField(blank=True, null=True)),
                ('plan_id', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('status', models.CharField(blank=True, default='creating', max_length=20, null=True)),
                ('os_version', models.CharField(blank=True, max_length=200, null=True)),
                ('os', models.CharField(blank=True, max_length=200, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('identifier', models.CharField(blank=True, max_length=200, null=True)),
                ('meta_data', models.JSONField(blank=True, null=True)),
                ('cycle', models.CharField(blank=True, max_length=200, null=True)),
                ('auto_renew', models.BooleanField(default=True)),
                ('log_count', models.IntegerField(default=0)),
                ('backup_count', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'vps',
            },
        ),
        migrations.CreateModel(
            name='VPSLog',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('action', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=200)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField()),
                ('hostname', models.CharField(max_length=200)),
                ('performed_by', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vps', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.vps')),
            ],
            options={
                'db_table': 'vps_log',
            },
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('token', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('ttl', models.IntegerField()),
                ('is_default', models.BooleanField(default=False)),
                ('expired_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_token',
            },
        ),
        migrations.CreateModel(
            name='TriggeredOnceEvent',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('event_name', models.CharField(blank=True, choices=[('VPS_EXPIRED', 'VPS Expired'), ('INVOICE_EXPIRED', 'Invoice Expired'), ('INVOICE_SUSPENDED', 'Invoice Suspended')], max_length=200, null=True)),
                ('key', models.CharField(blank=True, max_length=200, null=True)),
                ('vps_id', models.CharField(blank=True, max_length=200, null=True)),
                ('invoice_id', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField()),
                ('triggered_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'triggered_once_event',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('amount', models.FloatField()),
                ('type', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=200)),
                ('method', models.CharField(default='System', max_length=200)),
                ('description', models.TextField()),
                ('balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='home.balance')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.CreateModel(
            name='TicketChat',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('message', models.TextField()),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='home.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ticket_chat',
            },
        ),
        migrations.CreateModel(
            name='PaypalTransaction',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('amount', models.FloatField()),
                ('currency', models.CharField(default='USD', max_length=200)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Paid'), ('C', 'Canceled')], default='P', max_length=200)),
                ('description', models.TextField()),
                ('payment_id', models.CharField(max_length=200)),
                ('token', models.CharField(max_length=200)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'paypal_transaction',
            },
        ),
        migrations.CreateModel(
            name='InvoiceLine',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('amount', models.FloatField()),
                ('status', models.CharField(max_length=200)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='home.invoice')),
                ('vps', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.vps')),
            ],
            options={
                'db_table': 'invoice_line',
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='home.transaction'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BankTransaction',
            fields=[
                ('id', models.CharField(default=home.models.gen_uuid, editable=False, primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True)),
                ('_updated', models.DateTimeField(auto_now=True)),
                ('_deleted', models.BooleanField(default=False)),
                ('amount', models.FloatField()),
                ('currency', models.CharField(default='VND', max_length=200)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Paid'), ('C', 'Canceled'), ('U', 'Undefined')], default='P', max_length=200)),
                ('description', models.TextField()),
                ('gateway', models.CharField(choices=[('BIDV', 'BIDV'), ('VIETCOMBANK', 'Vietcombank'), ('TECHCOMBANK', 'Techcombank')], default='BIDV', max_length=200)),
                ('payment_id', models.CharField(max_length=200)),
                ('raw_data', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bank_transaction',
            },
        ),
    ]
